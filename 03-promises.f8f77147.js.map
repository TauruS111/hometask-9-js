{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAC9BC,EAAaH,EAAKE,cAAc,uBAChCE,EAAYJ,EAAKE,cAAc,sBAC/BG,EAAcL,EAAKE,cAAc,wBAoBvC,SAASI,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACT,IAAMC,EAAS,CAAET,WAAUC,SAEvBC,EACFI,EAAQG,GAERF,EAAOE,E,GAERR,E,IA9BPR,EAAKiB,iBAAiB,UAAU,SAACC,GAC/BA,EAAMC,iBAMN,IAJA,IAAMC,EAAQC,OAAOlB,EAAWmB,OAC1BC,EAAOF,OAAOjB,EAAUkB,OACxBE,EAASH,OAAOhB,EAAYiB,OAEzBG,EAAI,EAAGA,GAAKD,EAAQC,IAC3BnB,EAAcmB,EAAGL,EAAQG,GAAQE,EAAI,IAClCC,MAAK,SAAAC,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MACjBoB,EAAA9B,GAAS+B,OAAOC,QAAQ,uBAAwCC,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,M,IAEvEwB,OAAM,SAAAL,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MACjBoB,EAAA9B,GAAS+B,OAAOI,QAAQ,sBAAqCF,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nconst delayInput = form.querySelector('input[name=\"delay\"]');\nconst stepInput = form.querySelector('input[name=\"step\"]');\nconst amountInput = form.querySelector('input[name=\"amount\"]');\n\nform.addEventListener('submit', (event) => {\n  event.preventDefault();\n\n  const delay = Number(delayInput.value);\n  const step = Number(stepInput.value);\n  const amount = Number(amountInput.value);\n\n  for (let i = 1; i <= amount; i++) {\n    createPromise(i, delay + step * (i - 1))\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n         Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n});\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const result = { position, delay };\n\n      if (shouldResolve) {\n        resolve(result);\n      } else {\n        reject(result);\n      }\n    }, delay);\n  });\n}"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$delayInput","$ce04d3a99e08e73b$var$stepInput","$ce04d3a99e08e73b$var$amountInput","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","result","addEventListener","event","preventDefault","delay1","Number","value","step","amount","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.f8f77147.js.map"}